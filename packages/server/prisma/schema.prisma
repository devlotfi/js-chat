// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  sentInvitations     Invitation[]       @relation(name: "sentInvitations")
  recievedInvitations Invitation[]       @relation(name: "recievedInvitations")
  conversationUsers   ConversationUser[]
  messages            Message[]

  id             String   @id
  username       String
  email          String   @unique
  profilePicture String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Invitation {
  fromUser User @relation(name: "sentInvitations", fields: [fromUserId], references: [id], onDelete: Cascade)
  toUser   User @relation(name: "recievedInvitations", fields: [toUserId], references: [id], onDelete: Cascade)

  id         String   @id @default(uuid())
  fromUserId String
  toUserId   String
  createdAt  DateTime @default(now())

  @@unique([fromUserId, toUserId])
}

model Conversation {
  conversationUsers ConversationUser[]
  messages          Message[]

  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
}

model ConversationUser {
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  userId         String
  conversationId String

  @@id([userId, conversationId])
}

model Message {
  user         User         @relation(fields: [userId], references: [id])
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  id             String   @id @default(uuid())
  conversationId String
  userId         String
  text           String
  isDeleted      Boolean  @default(false)
  createdAt      DateTime @default(now())
}
